# Test Configuration for Certificate Renewal Service
# This configuration is optimized for testing with shorter intervals and debug logging

# Service Settings
check_interval_minutes: 2  # Fast checking for testing (vs 30 minutes in production)
log_level: DEBUG
log_file: test/logs/cert_renewal_test.log
cert_storage_path: test/client-certs

# Renewal Threshold Settings
# Percentage of remaining certificate lifetime - renew when at or below this threshold
# Example: 33.0 means renew when 33% or less of the certificate lifetime remains
# For a 90-day cert: 33% = ~30 days remaining
renewal_threshold_percent: 33.0  # High threshold for testing (vs 33.0 for production)

# Step CA Configuration - SUPPORTS BOTH JWK AND EST
# The same Step CA instance serves both protocols simultaneously
# Choose protocol based on your needs:
#   - JWK: Step CA native, requires step-cli
#   - EST: RFC 7030 standard, pure Python, no CLI needed

step_ca:
  # Protocol Selection: "JWK" or "EST"
  protocol: "JWK"  # Change to "EST" to use EST protocol
  
  # JWK Configuration (protocol="JWK")
  ca_url: "https://localhost:9000"
  ca_fingerprint: "68f812ebac2e9d66c03521d6a605c93b69765fde1e8ae2201246d75210e91f62"
  provisioner_name: "admin"
  provisioner_password: "testpassword"
  root_cert_path: "test/step-ca/certs/root_ca.crt"
  
  # EST Configuration (protocol="EST") - commented out, uncomment to use
  # ca_url: "https://localhost:9000/.well-known/est"
  # # or use port 8443: "https://localhost:8443/.well-known/est"
  # est_username: "est-client"
  # est_password: "est-secret"
  # root_cert_path: "test/step-ca/certs/root_ca.crt"
  
  # Bootstrap settings for automatic CA trust
  bootstrap_ca: true
  
  # CRL settings (same for both protocols)
  crl_enabled: true
  crl_cache_dir: "test/client-certs/crl"
  crl_refresh_hours: 1  # Refresh CRL every hour for testing
  
  # Connection settings
  timeout_seconds: 30
  retry_attempts: 3
  retry_delay_seconds: 5

# Test Certificates to Monitor
# These correspond to the dummy certificates generated by generate_dummy_certs.py
certificates:
  - name: "test-web-server"
    cert_path: "test/dummy-certs/test-web-server.crt"
    key_path: "test/dummy-certs/test-web-server.key"
    renewal_threshold_percent: 100.0  # Renew immediately for testing
    subject: "test-web.local"
    sans:
      - "www.test-web.local"
      - "api.test-web.local"
    
  - name: "test-api-server"
    cert_path: "test/dummy-certs/test-api-server.crt"
    key_path: "test/dummy-certs/test-api-server.key"
    renewal_threshold_percent: 100.0  # Renew immediately for testing
    subject: "test-api.local"
    sans:
      - "api-v2.test-web.local"
      - "backend.test-web.local"
      
  - name: "test-expiring-soon"
    cert_path: "test/dummy-certs/test-expiring-soon.crt"
    key_path: "test/dummy-certs/test-expiring-soon.key"
    renewal_threshold_percent: 100.0  # Renew immediately for testing
    subject: "expiring.test.local"
    
  - name: "test-client-auth"
    cert_path: "test/dummy-certs/test-client-auth.crt"
    key_path: "test/dummy-certs/test-client-auth.key"
    renewal_threshold_percent: 100.0  # Renew immediately for testing
    subject: "client.test.local"
    sans:
      - "client-app.test.local"

# How to Switch Protocols:
# 
# To use EST instead of JWK, simply change these settings:
#   1. Change: protocol: "EST"
#   2. Change: ca_url: "https://localhost:9000/.well-known/est"
#   3. Comment out: provisioner_name and provisioner_password
#   4. Uncomment: est_username and est_password (see above)
#
# Both protocols work with the same Step CA instance!
# Test both:
#   JWK: docker exec step-ca-test step ca health
#   EST: curl -k https://localhost:9000/.well-known/est/cacerts

# Notification Settings (for testing)
notifications:
  enabled: false  # Disable for testing
  # email:
  #   smtp_server: "localhost"
  #   smtp_port: 587
  #   from_address: "cert-renewal@test.local"
  #   to_addresses:
  #     - "admin@test.local"

# Health Check Settings
health_check:
  enabled: true
  port: 8080
  endpoint: "/health"

# Metrics Settings (optional)
metrics:
  enabled: false  # Disable for testing
  # prometheus:
  #   enabled: true
  #   port: 9090
  #   path: "/metrics"

# Testing-specific settings
testing:
  # Allow expired certificates for testing scenarios
  allow_expired_certificates: true
  
  # Skip actual renewal for dry-run testing
  dry_run_mode: false
  
  # Generate test reports
  generate_test_reports: true
  test_report_path: "test/logs/test_reports"