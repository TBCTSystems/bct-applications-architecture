{
  "openapi": "3.0.2",
  "info": {
    "title": "Donors",
    "description": "This is a sample server Donors server.",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "http://0.0.0.0:8080/donors"
    }
  ],
  "tags": [
    {
      "name": "donor",
      "description": "Donors List"
    }
  ],
  "paths": {
    "/donor": {
      "put": {
        "tags": [
          "donor"
        ],
        "summary": "Update an existing donor",
        "description": "",
        "operationId": "updateDonor",
        "requestBody": {
          "description": "Donor object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Donor not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "donor"
        ],
        "summary": "Add a new donor to the store",
        "description": "",
        "operationId": "addDonor",
        "requestBody": {
          "description": "Donor object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Donor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/donor/{donorId}": {
      "get": {
        "tags": [
          "donor"
        ],
        "summary": "Find Donor by ID",
        "description": "Returns a single Donor",
        "operationId": "getDonorById",
        "parameters": [
          {
            "name": "donorId",
            "in": "path",
            "description": "ID of donor to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "verbose",
            "in": "query",
            "description": "Output details",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Donor not found"
          }
        }
      },
      "delete": {
        "tags": [
          "donor"
        ],
        "summary": "Deletes a Donor",
        "description": "",
        "operationId": "deleteDonor",
        "parameters": [
          {
            "name": "donorId",
            "in": "path",
            "description": "Donor id to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Donor not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "Donor": {
        "required": [
          "category",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "name": {
            "type": "string",
            "example": "John Wayne"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true
            },
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "Donor status",
            "enum": [
              "not-available",
              "checked-in",
              "donating",
              "donated"
            ]
          }
        },
        "xml": {
          "name": "Donor"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}