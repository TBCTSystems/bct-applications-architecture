# NGINX Configuration for ECA PoC Target Server
# Provides HTTPS service with mTLS client authentication support
# Supports ACME HTTP-01 challenge validation for automated certificate renewal

# Event processing configuration
events {
    worker_connections 1024;
}

http {
    # MIME types and default type
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging configuration - combined format is already defined by default

    # Optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # HTTP server block - exclusively for ACME HTTP-01 challenge validation
    server {
        listen 80;
        server_name _;

        # ACME HTTP-01 challenge location
        # ACME agent places challenge tokens in /challenge/.well-known/acme-challenge/
        # step-ca PKI validates domain ownership by fetching these tokens via HTTP
        location ^~ /.well-known/acme-challenge/ {
            root /challenge/;
            try_files $uri =404;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block - primary service endpoint
    server {
        listen 443 ssl;
        server_name _;

        # SSL certificate configuration
        # Certificates are automatically managed by ACME agent and stored in shared volume
        # ACME agent writes renewed certificates to these paths
        ssl_certificate /certs/server/cert.pem;
        ssl_certificate_key /certs/server/key.pem;

        # TLS protocol configuration - TLS 1.3 only for maximum security
        ssl_protocols TLSv1.3;

        # Cipher suite configuration - high-security ciphers only
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers off;

        # mTLS client certificate authentication (optional mode)
        # Allows both regular HTTPS clients and EST-issued client certificate holders
        # step-ca root CA is used to validate client certificates
        # NOTE: Disabled for initial testing - will be enabled after ACME workflow validation
        # ssl_verify_client optional;
        # ssl_client_certificate /etc/ssl/certs/step-ca-root.crt;
        # ssl_verify_depth 2;

        # Access logging with combined format
        access_log /var/log/nginx/access.log combined;

        # Error logging
        error_log /var/log/nginx/error.log warn;

        # TLS error handling
        # 495: SSL certificate error (client cert validation failed)
        # 496: SSL certificate required (when verify_client is 'on')
        # 497: HTTP request sent to HTTPS port
        error_page 495 496 497 =400 /tls-error.html;

        # TLS error page location
        location = /tls-error.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Default location - serve static content
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ =404;
        }

        # Optional: Add headers for security
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
}
